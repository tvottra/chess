#BlueJ class context
comment0.target=Position
comment0.text=\r\n\ Class\ that\ represents\ the\ position\ of\ a\ Piece\ in\ [row][column]\ format\r\n\r\n\ @author\ Arjun\ Agrawal,\ Tommy\ Tran\r\n
comment1.params=row\ column
comment1.target=Position(int,\ int)
comment1.text=\r\n\ Constructor\ to\ initialize\ the\ row\ and\ column\ of\ this\ Position\r\n\r\n\ @param\ row\ \ \ \ -\ the\ row\ index\ of\ this\ Position\r\n\ @param\ column\ -\ the\ column\ index\ of\ this\ Position\r\n
comment10.params=other
comment10.target=boolean\ isAbove(Position)
comment10.text=\r\n\ Determines\ whether\ this\ Position\ is\ above\ the\ other\ Position\r\n\r\n\ @param\ other\ -\ some\ other\ Position\r\n\ @return\ true\ if\ this\ Position\ is\ above\ the\ other\ Position,\ false\ otherwise.\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ toString\ method\ for\ this\ Position\r\n\r\n\ @return\ the\ Position\ in\ the\ following\ format\:\ [row][column]\r\n
comment12.params=n
comment12.target=void\ addToRow(int)
comment12.text=\r\n\ Add\ to\ row\ the\ given\ number\r\n\r\n\ @param\ n\ -\ the\ given\ number\ to\ add\r\n
comment13.params=n
comment13.target=void\ addToColumn(int)
comment13.text=\r\n\ Add\ to\ column\ the\ given\ number\r\n\r\n\ @param\ n\ -\ the\ given\ number\ to\ add\r\n
comment14.params=
comment14.target=boolean\ isWithinBounds()
comment14.text=\r\n\ Checks\ whether\ the\ Position\ is\ within\ the\ bounds\ of\ the\ board\ size\r\n\r\n\ @return\ true\ Position\ is\ within\ bounds,\ false\ otherwise\r\n
comment15.params=pos
comment15.target=void\ setPosition(Position)
comment15.text=\r\n\ Mutator\ method\ to\ set\ this\ Position\ to\ some\ other\ Position\r\n\r\n\ @param\ pos\ some\ other\ Position\r\n
comment16.params=r\ c
comment16.target=void\ setPosition(int,\ int)
comment16.text=\r\n\ Mutator\ method\ to\ set\ the\ Piece's\ Position\ to\ some\ r\ and\ c\r\n\r\n\ @param\ r\ desired\ row\r\n\ @param\ c\ desired\ column\r\n
comment17.params=other
comment17.target=boolean\ hasAbsSlopeOfOne(Position)
comment17.text=\r\n\ Get\ whether\ the\ absolute\ value\ of\ the\ slope\ from\ this\ Position\ to\ another\ Position\ is\ 1\ by\ comparing\ row1\ and\ row2\ and\ column1\ and\ column2.\r\n\ Favored\ over\ division\ with\ floats,\ as\ floats\ can\ lose\ accuracy.\r\n\r\n\ @param\ other\ -\ some\ other\ Position\r\n\ @return\ true\ if\ absolute\ value\ of\ slope\ is\ 1;\ false\ otherwise.\r\n
comment2.params=other
comment2.target=Position(Position)
comment2.text=\r\n\ Constructor\ initialize\ a\ new\ Position\ with\ another\ Position's\ coordinates\r\n\r\n\ @param\ other\ -\ some\ other\ Position\r\n
comment3.params=
comment3.target=int\ getRow()
comment3.text=\r\n\ Accessor\ method\ to\ get\ the\ row\ index\r\n\r\n\ @return\ the\ row\ index\r\n
comment4.params=
comment4.target=int\ getColumn()
comment4.text=\r\n\ Accessor\ method\ to\ get\ the\ column\ index\r\n\r\n\ @return\ the\ column\ index\r\n
comment5.params=row
comment5.target=void\ setRow(int)
comment5.text=\r\n\ Mutator\ method\ to\ set\ the\ row\ index\ to\ the\ given\ row\ index\r\n\r\n\ @param\ row\ -\ the\ given\ row\ index\r\n
comment6.params=column
comment6.target=void\ setColumn(int)
comment6.text=\r\n\ Mutator\ method\ to\ set\ the\ column\ index\ to\ the\ given\ column\ index\r\n\r\n\ @param\ column\ -\ the\ given\ column\ index\r\n
comment7.params=other
comment7.target=boolean\ equals(Position)
comment7.text=\r\n\ Method\ to\ determine\ whether\ this\ Position\ and\ the\ given\ Position\ are\ equal\r\n\r\n\ @param\ other\ -\ the\ given\ Position\r\n\ @return\ true\ if\ this\ Position\ and\ other\ have\ the\ same\ row\ and\ column\ indexes,\r\n\ false\ otherwise\r\n
comment8.params=other
comment8.target=int\ compareTo(Position)
comment8.text=\r\n\ Compares\ this\ Position\ to\ some\ other\ Position\r\n\r\n\ @param\ other\ -\ the\ given\ Position\r\n\ @return\ 1\ if\ other\ is\ in\ first\ quadrant,\ 2\ if\ other\ is\ in\ second\ quadrant,\ 3\r\n\ if\ other\ is\ in\ third\ quadrant,\ 4\ if\ other\ is\ in\ fourth\ quadrant,\ -1\r\n\ if\ inappropriate\r\n
comment9.params=other
comment9.target=boolean\ isLeftOf(Position)
comment9.text=\r\n\ Determines\ whether\ this\ Position\ is\ left\ of\ the\ other\ Position\r\n\r\n\ @param\ other\ -\ some\ other\ Position\r\n\ @return\ true\ if\ this\ Position\ is\ left\ of\ the\ other\ Position,\ false\ otherwise.\r\n
numComments=18
